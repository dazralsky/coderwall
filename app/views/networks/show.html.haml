-content_for :mixpanel do
  =record_event('viewed network', :network => @network.slug, :sort => (params[:sort] || 'upvotes'))

= content_for :body_id do
  protip-multiple

= content_for :content_wrapper do
  = false

=content_for :javascript do
  = javascript_include_tag 'hyphenator/hyphenator'
  =javascript_include_tag 'protips'
  =javascript_include_tag 'networks'
  :javascript
    Hyphenator.run()

.inside-main-content.cf
  = render :partial => 'network_navigation', :locals => {:network => @network}
  %aside.protips-sidebar
    %ul.protip-actions
      %li
        =link_to('', join_or_leave_path(@network), :remote => signed_in?, :method => :post, :rel => "nofollow", :class => join_or_leave_class(@network)+" join-or-leave track", 'data-action' => (join_or_leave_tracking(@network) + ' network'), 'data-from' => 'network', 'data-properties' => {'network name' => @network.name}.to_json)

      %li
        %a.share{:href => new_protip_path(:topics => @network.name), :class => "track", 'data-action' => "create protip", 'data-from' => 'network'}
          Share a protip
    %ul.filter
      %li
        %a{:href => network_path(@network.slug, :sort => 'upvotes'), :class => (selected_class('') + selected_class('upvotes'))}
          Popular
      -if is_admin?
        %li
          %a{:href => network_path(@network.slug, :sort => 'trending'), :class => (selected_class('') + selected_class('trending'))}
            Trending
        %li
          %a{:href => network_path(@network.slug, :sort => 'hn'), :class => (selected_class('') + selected_class('hn'))}
            HN
        %li
          %a{:href => network_path(@network.slug, :sort => 'popular'), :class => (selected_class('') + selected_class('popular'))}
            Popular(new)
      %li
        %a{:href => network_path(@network.slug, :sort => 'new'), :class => selected_class('new')}
          New
        -#- if @network.recent_protips_count > 0
        -#  %span
        -#    = @network.recent_protips_count
      %li
        %a{:href => members_network_path(@network.slug), :class => selected_class('members')}
          Members
        -#- if @network.members(nil).count > 0
        -#  %span
        -#    = @network.members(nil).count
      - if is_admin?
        %li
          %a{:href => network_path(@network.slug, :filter => 'featured'), :class => selected_class('featured')}
            Featured
          - if @network.featured_protips.count > 0
            %span
              = @network.featured_protips.count
        %li
          %a{:href => network_path(@network.slug, :filter => 'flagged'), :class => selected_class('flagged')}
            Flagged
          - if @network.flagged_protips.count > 0
            %span
              = @network.flagged_protips.count
    - if @network.resident_expert
      .side-box
        %a{:href => faq_path(:anchor => "resident-expert")}
        .side-box-header.expert
          %h3 Resident Expert
        .inside.cf
          %a.avatar{:href => badge_path(@network.resident_expert.username)}
            =image_tag(users_image_path(@network.resident_expert))
          %ul.details
            %li
              %a.users{:href => badge_path(@network.resident_expert.username)}
                = @network.resident_expert.username
            %li
              %a.tips{:href => expert_network_path(@network.slug)}
                Show protips
          -#%p.resident-text
          -#  Our resident experts are industry leaders in their field.

    - if @network.mayor
      .side-box
        %a{:href => faq_path(:anchor => "mayor")}
        .side-box-header.mayor
          %h3 Mayor
        .inside.cf
          %a.avatar{:href => badge_path(@network.mayor.username)}
            =image_tag(users_image_path(@network.mayor))
          %ul.details
            %li
              %a.users{:href => badge_path(@network.mayor.username)}
                = @network.mayor.username
            %li
              %a.tips{:href => mayor_network_path(@network.slug)}
                Show protips
    - else
      .side-box
        .side-box-header.mayor
          %h3 Mayor
        .inside.cf
          %p
            Want to become the mayor of
            = "#{@network.name}?"
            start
            =link_to 'sharing', new_protip_path(:topics => @network.name)
            great pro tips

    - if is_admin?
      .network-details
        %h3 Tags in this network
        %p
          %ul.tag-list.cf
            - @network.ordered_tags.each do |tag|
              %li
                %a{:href => tagged_network_path(@network.slug, :tags => [tag])}
                  = tag
          - if is_admin?
            .admin-tags
              = form_for :tags, :url => update_tags_network_url(@network.slug), :method => :post do |f|
                = f.text_area :tags, :label => false, :value => (@network.ordered_tags + @network.tags).uniq.join(", ")
                = f.submit 'Update Tags', :class => "update-tags"

    - else
      - cache ['v1',"network_details", @network.slug, @network.tags.count, @network.updated_at.to_i], :expires_in => 1.week do
        .network-details
          %h3 Tags in this network
          %p
            %ul.tag-list.cf
              - @network.ordered_tags.each do |tag|
                %li
                  %a{:href => tagged_network_path(@network.slug, :tags => [tag])}
                    = tag


  - if @protips.blank?
    %ul.list-of-members.cf
      - @network.ranked_members.each_with_index do |member, index|
        %li
          .header.cf
            - the_mayor = member.is_mayor_of?(@network)
            .mayor-level{:class => ("the-mayor" if the_mayor)}
              %span
                = (index+1).ordinalize unless the_mayor
            %a.user.track{:href => badge_path(member.username), 'data-action' => 'view user profile', 'data-from' => 'network members (avatar)', 'data-properties' => {'network name' => @network.name}.to_json}
              =image_tag(users_image_path(member))
            .details
              %h2
                %a{:href => badge_path(member.username), 'data-action' => 'view user profile', 'data-from' => 'network members (username)', 'data-properties' => {'network name' => @network.name}.to_json}
                  = member.username
              - unless member.team.nil?
                %ul
                  %li
                    of team
                    %a.user{:href => teamname_path(member.team.slug), 'data-action' => 'view team', 'data-from' => 'network members (team name)', 'data-properties' => {'network name' => @network.name}.to_json}
                      = member.team.name
                  %li
                    = member.title

          %ul.actions-list
            %li
              %a.view{:href => profile_path(member.username), 'data-action' => 'view user profile', 'data-from' => 'network members (view profile)', 'data-properties' => {'network name' => @network.name}.to_json}
                View Profile
            -#%li
            -#  %a.write-tip{:href => user_protips_path(member.username), 'data-action' => "#{@network.name} member protips view"}
            -#    Protips
      .three-cols-more
        - more_members = @network.members.count-@network.ranked_members.count
        - if more_members > 0
          .more-members

            = more_members
            more members
  - else
    .protips-content
      = render :partial => "protips/grid", :locals => {:protips => @protips.results, :collection => @protips, :url => :protips_path, :hide_more => false, :width => 3, :opportunity => @job, :mode => 'popup'}
