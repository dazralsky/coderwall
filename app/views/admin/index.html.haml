= content_for :body_id do
  admin

/ .left
/   =image_tag 'mediaWhiteBackground.png'

.left.clear
  %ul{:style => "float:right; width:100%"}
    %li{:style => "float:left; padding: 10px"}=link_to 'teams', admin_teams_path
    %li{:style => "float:left; padding: 10px"}=link_to 'comments', latest_comments_path
    %li{:style => "float:left; padding: 10px"}=link_to 'featured', processing_queue_path(:auto_tweet)
    %li{:style => "float:left; padding: 10px"}=link_to 'hackernews', processing_queue_path(:hackernews)

  - midnight = DateTime.now.in_time_zone("Pacific Time (US & Canada)").midnight
  - signups_y = User.where("created_at > ? AND created_at <= ?", midnight - 1.day, midnight).count
  - signups_t = User.where("created_at > ?", midnight).count
  - referred_signups_y = User.where('referred_by IS NOT NULL').where("created_at > ? AND created_at <= ?", midnight - 1.day, midnight).count
  - referred_signups_t = User.where('referred_by IS NOT NULL').where("created_at > ? ", midnight).count
  - visited_y = User.active.where("last_request_at > ? AND last_request_at <= ?", midnight - 1.day, midnight).count
  - visited_t = User.active.where("last_request_at > ?", midnight).count
  - protips_created_y = Protip.where("created_at > ? AND created_at <= ?", midnight - 1.day, midnight).count
  - protips_created_t = Protip.where("created_at > ?", midnight).count
  - original_protips_created_y = Protip.where("created_at > ? AND created_at <= ?", midnight - 1.day, midnight).reject(&:created_automagically?).count
  - original_protips_created_t = Protip.where("created_at > ?", midnight).reject(&:created_automagically?).count
  - protip_upvotes_y = Like.where(:likable_type => "Protip").where("created_at > ? AND created_at <= ?", midnight - 1.day, midnight).count
  - protip_upvotes_t = Like.where(:likable_type => "Protip").where("created_at > ?", midnight).count
  - mau_l = User.where("last_request_at >= ? AND last_request_at < ?", 2.months.ago, 31.days.ago).count
  - mau_minus_new_signups_l = User.where("last_request_at >= ? AND last_request_at < ? AND created_at < ?", 2.months.ago, 31.days.ago, 2.months.ago).count
  - mau_t = User.where("last_request_at >= ?", 31.days.ago).count
  - mau_minus_new_signups_t = User.where("last_request_at >= ? AND created_at < ?", 31.days.ago, 31.days.ago).count
  %table.stats
    %thead
      %tr
        %td
        %td Yesterday
        %td Today
    %tbody
      %tr
        %td Signed Up
        %td= "#{signups_y} (#{(referred_signups_y*100/signups_y.to_f rescue 0).round(2)}%)"
        %td{:class => admin_stat_class(signups_y, signups_t)}= "#{signups_t} (#{(referred_signups_t*100/signups_t.to_f rescue 0).round(2)}%)"
      %tr
        %td Visited
        %td= visited_y
        %td{:class => admin_stat_class(visited_y, visited_t)}= visited_t
      %tr
        %td Protips Created
        %td= link_to "#{protips_created_y} (#{(original_protips_created_y*100/protips_created_y.to_f rescue 0).round(2)}%)", date_protips_path('yesterday')
        %td{:class => admin_stat_class(protips_created_y, protips_created_t)}= link_to "#{protips_created_t} (#{(original_protips_created_t*100/protips_created_t.to_f rescue 0).round(2)}%)", date_protips_path('today')
      %tr
        %td Protip Upvotes
        %td= protip_upvotes_y
        %td{:class => admin_stat_class(protip_upvotes_y, protip_upvotes_t)}= protip_upvotes_t
      %tr.heading
        %td{:colspan => 3}
      %tr
        %td Active Users
        %td{:colspan => 2}= User.active.count
      %tr
        %td Monthly Active Users
        %td= "#{mau_l}/#{mau_minus_new_signups_l}"
        %td
          %span{:class => admin_stat_class(mau_l, mau_t)}= mau_t
          %span{:class => admin_stat_class(mau_minus_new_signups_l, mau_minus_new_signups_t)}=mau_minus_new_signups_t
      %tr
        %td Pending Users
        %td{:colspan => 2}= User.pending.count
      %tr
        %td 31 day growth rate
        %td{:colspan => 2}= User.monthly_growth
      %tr
        %td 7 day growth rate
        %td{:colspan => 2}= User.weekly_growth
      %tr
        %td Resque Dashboard
        %td{:colspan => 2}= link_to "Resque dashboard", "/admin/resque"
      %tr
        %td Sidekiq Dashboard
        %td{:colspan => 2}= link_to "Sidekiq dashboard", "/admin/sidekiq"
      %tr
        %td Cache Stats
        %td{:colspan => 2}= link_to "Cache stats", admin_cache_stats_path
      %tr
        %td{:colspan => 2} Pro tips created in networks in past week
      -Network.all.each do |network|
        %tr
          %td= link_to network.name, network_path(network)
          %td= network.protips.where('created_at > ?', 1.week.ago).count
      %tr
        %td{:colspan => 2} Active users in past week
      -User.most_active_by_country.first(10).each do |user_group|
        %tr
          %td= user_group.country
          %td= user_group.count
-if Rails.env.development?
  .right.clear
    %h4=link_to('Toggle Premium Team', url_for(:controller => 'admin', :action => :toggle_premium_team))
  .clear
